[{"categories":["golang"],"contents":"问题场景 准备在读取一个网络地址，获取页面的html标签结构和内容。找到一些方法，是通过读取```http.Get(testUrl) ``` resp *Response 的内容```resp.Body ```再使用```net/html```库进行读取分析。第一次获取title 标签，第二次获取某个a 标签，但是第二次无法读到资源。  原因 猜测指针在遍历时指向了结束，或许在一次读写后关闭了资源。 实际上要追根溯源 resp.Body 的Body 是```Body io.ReadCloser``` 而ReadCloser是一个接口 ```js // ReadCloser is the interface that groups the basic Read and Close methods. type ReadCloser interface { Reader Closer } ```  解决 通过\u0026quot;io/ioutil\u0026quot; 读取后创建多个副本来进行读取 ```js func main(){ resp, err := http.Get(testUrl) if err != nil { fmt.Println(\u0026quot;errr--------\u0026quot;) } defer resp.Body.Close() b, err := ioutil.ReadAll(resp.Body) //读取 if err !=nil{ panic(err) } //创建一个 reader := bytes.NewReader(b) //创建第二个 readerTitle := bytes.NewReader(b) videoSrc = alink.href(reader) title = alink.Title(readerTitle) ... } ```  ","permalink":"https://xtangelo.com/2020/readtwicefromthesacmeio-reader.html","tags":["golang","io.Reader","resp.Body"],"title":"Read Twice From the Same io.Reader"},{"categories":["blog"],"contents":"重写 重写的意义是否在于优化？或许是，至少或许有改进的方。毕竟在很长的过去时间范围内大多都是 helleWorld！然后就没有然后了。 依旧在github 上面来回的折腾。无论如何总是有些想法萦绕在那里时不时的冒出来。然后去做吧。\n问题很多 人要各种归因，来回的张望转了一圈有一圈啊。思考总是好的，解释也是有意义的来抹平行为和愿景的落差让自己来接受。有些人靠具体的行动来一点一点填补这种沟壑，有些则望洋兴叹式的转身离去，也不会留下什么。\n 困难的事情尝试3-4此后就容易些了，保持耐心很重要。 经验的积累会带来勇气和信心。 拖延或许是好时，有些时候资源并不是很多，而你又是一个开创者，等待别人的答案也许是个更好的方式。 缓慢的积累势必要的，也是要接受的，因为没有上面加速装置。  好的事情 尝试总是好的，念念不忘必有回想，再次起航就是希望。\n","permalink":"https://xtangelo.com/2020/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E5%86%99blog.html","tags":["blog"],"title":"为什么重写blog"},{"categories":null,"contents":"not test 一个新的博客\n","permalink":"https://xtangelo.com/about.html","tags":null,"title":"About"},{"categories":null,"contents":"","permalink":"https://xtangelo.com/search.html","tags":null,"title":"Search Results"}]